<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jeff Zych</title>
  <subtitle></subtitle>
  <id>http://jlzych.com/</id>
  <link href="http://jlzych.com/"/>
  <link href="http://jlzych.com/feed.xml" rel="self"/>
  <updated>2017-01-08T23:10:00Z</updated>
  <author>
    <name>Jeff Zych</name>
  </author>
  <entry>
    <title>Sol LeWitt - Wall Drawing</title>
    <link rel="alternate" href="/2017/01/08/sol-lewitt-wall-drawing-273/"/>
    <id>/2017/01/08/sol-lewitt-wall-drawing-273/</id>
    <published>2017-01-08T23:10:00Z</published>
    <updated>2017-01-08T23:10:00Z</updated>
    <author>
      <name>Jeff Zych</name>
    </author>
    <content type="html">&lt;p&gt;I recently saw &lt;a href="https://en.wikipedia.org/wiki/Sol_LeWitt"&gt;Sol LeWitt&amp;rsquo;s&lt;/a&gt; Wall Drawing #273 at the &lt;a href="https://www.sfmoma.org/"&gt;SF MOMA&lt;/a&gt;, which really stayed with me after leaving the museum. In particular, I like that it wasn&amp;rsquo;t drawn by the artist himself, but rather he wrote instructions for draftspeople to draw this piece directly on the walls of the museum, thus embracing some amount of variability. From the museum&amp;rsquo;s description:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As his works are executed over and over again in different locations, they expand or contract according to the dimensions of the space in which they are displayed and respond to ambient light and the surfaces on which they are drawn. In some instances, as in this work, those involved in the installation make decisions impacting the final composition.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img alt="Sol LeWitt's Wall Drawing #273" src="/images/2017-01-08-sol-lewitt-wall-drawing-273/wall7.jpg?1483921148" /&gt;
&lt;em&gt;Sol LeWitt&amp;rsquo;s Wall Drawing #273&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This embrace of variability reminds me of the web. People browse the web on different devices that have different sizes and capabilities. We can&amp;rsquo;t control how people will experience our websites. Since LeWitt left instructions for creating his pieces, I realized I could translate those instructions into code, and embrace the variability of the web in the process. The result is &lt;a href="http://codepen.io/jlzych/full/rjVoby/"&gt;this CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p data-height="465" data-theme-id="0" data-slug-hash="rjVoby" data-default-tab="result" data-user="jlzych" data-embed-version="2" data-pen-title="Sol LeWitt – Wall Drawing #273" class="codepen"&gt;See the Pen &lt;a href="http://codepen.io/jlzych/pen/rjVoby/"&gt;Sol LeWitt – Wall Drawing #273&lt;/a&gt; by Jeff (&lt;a href="http://codepen.io/jlzych"&gt;@jlzych&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;script async src="https://production-assets.codepen.io/assets/embed/ei.js"&gt;&lt;/script&gt;

&lt;p&gt;LeWitt left the following instructions:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A six-inch (15 cm) grid covering the walls. Lines from corners, sides, and center of the walls to random points on the grid.&lt;/p&gt;

&lt;p&gt;1st wall: Red lines from the midpoints of four sides;&lt;/p&gt;

&lt;p&gt;2nd wall: Blue lines from four corners;&lt;/p&gt;

&lt;p&gt;3rd wall: Yellow lines from the center;&lt;/p&gt;

&lt;p&gt;4th wall: Red lines from the midpoints of four sides, blue lines from four corners;&lt;/p&gt;

&lt;p&gt;5th wall: Red lines from the midpoints of four sides, yellow lines from the center;&lt;/p&gt;

&lt;p&gt;6th wall: Blue lines from four corners, yellow lines from the center;&lt;/p&gt;

&lt;p&gt;7th wall: Red lines from the midpoints of four sides, blue lines from four corners, yellow lines from the center.&lt;/p&gt;

&lt;p&gt;Each wall has an equal number of lines. (The number of lines and their length are determined by the draftsman.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As indicated in the instructions, there are 7 separate walls with an equal number of lines, the number and length of which are determined by the draftsperson. To simulate the decisions the draftspeople make, I included controls to let people set how many lines should be drawn, and toggle which walls to see. I let each color be toggleable, as opposed listing out walls 1-7, since each wall is just different combinations of the red, blue, and yellow lines.&lt;/p&gt;

&lt;p&gt;The end result fits right in with how &lt;a href="https://www.google.com/search?q=wall+drawing+273&amp;amp;tbm=isch&amp;amp;tbo=u&amp;amp;source=univ&amp;amp;sa=X&amp;amp;ved=0ahUKEwjV6Jub4LPRAhUD1mMKHclqAr4QsAQIIQ&amp;amp;biw=1438&amp;amp;bih=780"&gt;human draftspeople&lt;/a&gt; have turned these instructions into art. The most notable difference I see between a human and a program is the degree of randomness in the final drawing. From comparing the output of the program to versions done by people, the ones drawn by people seem less &amp;ldquo;random.&amp;rdquo; I get the sense that people have a tendency to more evenly distribute the lines to points throughout the grid, whereas the program can create clusters and lines that are really close to each other which a person would consider unappealing and not draw.&lt;/p&gt;

&lt;p&gt;It makes me wonder how LeWitt would respond to programmatic versions of his art. Is he okay with computers making art? Were his instructions specifically for people, or would he have embraced using machines to generate his work had the technology existed in his time? How &amp;ldquo;random&amp;rdquo; did he want people make these drawings? Does he like that a program is more &amp;ldquo;random,&amp;rdquo; or did he expect and want people to make his wall drawings in a way that they would find visually pleasing? We&amp;rsquo;ll never know, but it was fun to interpret his work through the lens of today&amp;rsquo;s technology.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Books I Read in 2016</title>
    <link rel="alternate" href="/2017/01/03/books-i-read-in-2016/"/>
    <id>/2017/01/03/books-i-read-in-2016/</id>
    <published>2017-01-04T05:08:00Z</published>
    <updated>2017-01-04T05:08:00Z</updated>
    <author>
      <name>Jeff Zych</name>
    </author>
    <content type="html">&lt;p&gt;In 2016, I read 22 books. Only 3 of those 22 were fiction. I had a consistent clip of 1-3 per month, and managed to finish at least one book each month.&lt;/p&gt;

&lt;p&gt;Highlights include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The Laws of Simplicity&lt;/em&gt; by John Maeda: the first book I read this year was super interesting. In it, Maeda offers 10 laws for for balancing simplicity and complexity in business, technology, and design. By the end, he simplifies the book down to one law: &amp;ldquo;Simplicity is about subtracting the obvious, and adding the meaningful.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;David Whitaker Painting&lt;/em&gt; by Matthew Sturgis: I had never heard of the artist &lt;a href="https://en.wikipedia.org/wiki/David_Whitaker_(artist)"&gt;David Whitaker&lt;/a&gt; until I stumbled on this book at Half Price Books in Berkeley. He makes abstract paintings that combine lines and colors and gradients in fantastic ways. The cover sucked me in, and after flipping through a few pages I fell in love with his work and immediately bought the book. Check out his work on &lt;a href="http://www.davidwhitakerpaintings.com/portfolio_home.htm"&gt;his portfolio&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Libra&lt;/em&gt; by Don DeLillo: a fascinating account of all the forces (including internal ones) that pushed Lee Harvey Oswald into assassinating JFK. The book is fiction and includes plenty of embellishments from the author (especially internal dialog), but is based on real facts from Oswald&amp;rsquo;s life and the assassination.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;NOFX: The Hepatitis Bathtub and Other Stories&lt;/em&gt; by NOFX: a thoroughly entertaining history of the SoCal pop-punk band NOFX as told through various ridiculous stories from the members of the band themselves. It was perfect poolside reading in Cabo.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://orgdesignfordesignorgs.com/"&gt;Org Design for Design Orgs&lt;/a&gt;&lt;/em&gt; by Peter Merholz &amp;amp; Kristin Skinner: This is basically a handbook for what I should be doing as the Head of Design at Optimizely. I can&amp;rsquo;t overstate how useful this has been to me in my job. If you&amp;rsquo;re doing any type of design leadership, I highly recommend it.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The Gift&lt;/em&gt;, by Lewis Hyde: a very thought-provoking read about creativity and the tension between art and commerce. So thought-provoking that it provoked me into writing down my thoughts in my &lt;a href="/2016/12/31/thoughts-on-the-gift/"&gt;last blog post&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="full-list-of-books-read"&gt;Full List of Books Read&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The Laws of Simplicity&lt;/em&gt; by John Maeda (1/3/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Although of Course You End up Becoming Yourself&lt;/em&gt; by David Lipsky (1/24/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Practical Empathy&lt;/em&gt; by Indi Young (2/1/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Time Out&lt;/em&gt; of Joint by Philip K. Dick (2/8/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;A Wild Sheep Chase&lt;/em&gt; by Haruki Murakami (3/5/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Radical Focus: Achieving Your Most Important Goals with Objectives and Key Results&lt;/em&gt; by Christina Wodtke (3/21/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The Elements of Style&lt;/em&gt; by William Strunk Jr. and E.B. White (3/23/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Sprint: How to solve big problems and test new ideas in just 5 days&lt;/em&gt; by Jake Knapp, with John Zeratsky &amp;amp; Braden Kowitz (4/8/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;David Whitaker Painting&lt;/em&gt; by Matthew Sturgis (4/18/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Show Your Work&lt;/em&gt; by Austin Kleon (5/8/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Nicely Said&lt;/em&gt; by Kate Kiefer Lee and Nicole Fenton (6/5/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The Unsplash Book&lt;/em&gt; by Jory MacKay (6/27/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Words Without Music: A Memoir&lt;/em&gt; by Philip Glass (July)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Libra&lt;/em&gt; by Don DeLillo (8/21/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;How To Visit an Art Museum&lt;/em&gt; by Johan Idema (8/23/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;101 Things I Learned in Architecture School&lt;/em&gt; by Matthew Frederick (9/5/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Intercom on Jobs-to-be-Done&lt;/em&gt; by Intercom (9/17/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Org Design for Design Orgs&lt;/em&gt; by Peter Merholz &amp;amp; Kristin Skinner (9/26/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;NOFX: The Hepatitis Bathtub and Other Stories&lt;/em&gt; by NOFX with Jeff Alulis (10/23/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The User&amp;rsquo;s Journey: Storymapping Products That People Love&lt;/em&gt; by Donna Lichaw (11/10/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Sharpie Art Workshop Book&lt;/em&gt; by Timothy Goodman (11/13/16)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The Gift&lt;/em&gt; by Lewis Hyde (12/29/16)&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Thoughts on “The Gift”</title>
    <link rel="alternate" href="/2016/12/31/thoughts-on-the-gift/"/>
    <id>/2016/12/31/thoughts-on-the-gift/</id>
    <published>2016-12-31T20:47:00Z</published>
    <updated>2016-12-31T20:47:00Z</updated>
    <author>
      <name>Jeff Zych</name>
    </author>
    <content type="html">&lt;p&gt;I finally finished &amp;ldquo;&lt;a href="http://www.lewishyde.com/publications/the-gift"&gt;The Gift&lt;/a&gt;,&amp;rdquo; by Lewis Hyde, after reading it on and off for at least the last 4 months (probably more). Overall I really enjoyed it and found it very thought-provoking. At its core it&amp;rsquo;s about creativity, the arts, and the tension between art and commerce — topics which are fascinating to me. It explores the question, how do artists make a living in a market-based economy? (I say &amp;ldquo;explores the question&amp;rdquo; instead of &amp;ldquo;answers&amp;rdquo; because it doesn&amp;rsquo;t try to definitively answer the question, although some solutions are provided).&lt;/p&gt;

&lt;p&gt;It took me awhile to finish, though, because the book skews academic at times, which made some sections a slog to get through. The first half goes pretty deep into topics including the theory of gifts, history of gift-giving, folklores about gifts, and how gift-based economies function; the latter half uses Walt Whitman and Ezra Pound as real-life examples of the theory-based first half. Both of these sections felt like they could have been edited down to be much more succinct, while still preserving the main points being made. This would have made the book easier to get through, and the book&amp;rsquo;s main points easier to parse and more impactful.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a sweet spot in the middle, however, which is a thought-provoking account of the creative process and how artists describe their work. If I were to re-read the book I&amp;rsquo;d probably just read Chapter 8, &amp;ldquo;The Commerce of the Creative Spirit.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;The book makes a lot of interesting points about &lt;strong&gt;gifts and gift-giving&lt;/strong&gt;, &lt;strong&gt;market economies&lt;/strong&gt;, &lt;strong&gt;artists and the creative process&lt;/strong&gt;, &lt;strong&gt;how artists can survive in a market economy&lt;/strong&gt;, and &lt;strong&gt;the Cold War&amp;rsquo;s affect on art in America&lt;/strong&gt;, which I summarize below.&lt;/p&gt;

&lt;h2 id="on-gifts-and-gift-giving"&gt;On Gifts and Gift-Giving&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Gifts need to be used or given away to have any value. Value comes from the gift&amp;rsquo;s use. They can&amp;rsquo;t be sold or stay with an individual. If they do, they&amp;rsquo;re wasted. This is true of both actual objects and talent.&lt;/li&gt;
&lt;li&gt;Gift giving is a river that needs to stay in motion, whereas markets are an equilibrium that seeks balance.&lt;/li&gt;
&lt;li&gt;Giving a gift creates a bond between the giver and recipient. Commerce leaves no connection between people. Gifts foster community, whereas commerce fosters freedom and individuals. Gifts are agents of social cohesion.&lt;/li&gt;
&lt;li&gt;Gifts are given with no expectation of a return gift. By giving something to a member of the community, or the community itself, you trust that the gift will eventually return to you in some other form by the community.&lt;/li&gt;
&lt;li&gt;Converting a gift to money, e.g. by selling it on the open market, undermines the group&amp;rsquo;s cohesion, fragments the group, and could destroy it if it becomes the norm.&lt;/li&gt;
&lt;li&gt;Gift economies don&amp;rsquo;t scale, though. Once it grows beyond the point that each member knows each other to some degree it will collapse.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="on-market-economies"&gt;On Market Economies&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Market economies are good for dealing with strangers, i.e. people who aren&amp;rsquo;t part of a group, people who you won&amp;rsquo;t see again. There&amp;rsquo;s a fair value to exchange goods and services with people outside the group, and no bond is created between people.&lt;/li&gt;
&lt;li&gt;Markets serve to divide, classify, quantify. Gifts and art are a way of unifying people.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="on-artists-and-the-creative-process"&gt;On Artists and the Creative Process&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Artists typically don&amp;rsquo;t know where their work comes from. They produce something, then evaluate it and think, &amp;ldquo;Did I do that?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;To produce art, you have to turn off the part of your brain that quantifies, edits, judges. Some artists step away from their work, go on retreats, travel, see new things, have new experiences, take drugs, isolate themselves, and so on. The act of judging and evaluating kills the creative process. Only after a work of art is created can an artist quantify it and judge it and (maybe) sell it.&lt;/li&gt;
&lt;li&gt;Art is a gift that is given to the world, and that gift has the power to awaken new artists (see above, gifts must keep moving). That is, an artist is initially inspired by a master&amp;rsquo;s work of art to produce their own. In this way, art is further given back to the world, and the cycle of gift-giving continues.&lt;/li&gt;
&lt;li&gt;Each piece of work an artist produces is a gift given to them by an unknown external agent, and in turn a gift they pass on to the world.&lt;/li&gt;
&lt;li&gt;Artists &amp;ldquo;receive&amp;rdquo; their work – it&amp;rsquo;s an invocation of something (e.g. &amp;ldquo;muse&amp;rdquo;, &amp;ldquo;genius&amp;rdquo;, etc.). The initial spark comes to them from a source they do not control. Only after this initial raw &amp;ldquo;materia&amp;rdquo; appears does the work of evaluation, clarification, revision begin. Refining an idea, and bringing it into the world, comes after that initial spark is provided to them by an external source.
&lt;img alt="&amp;quot;Invoking the creative spirit&amp;quot;" src="/images/2016-12-31-thoughts-on-the-gift/invocation.jpg?1483218114" /&gt;

&lt;ul&gt;
&lt;li&gt;Artists can&amp;rsquo;t control the initial spark, or will it to appear. The artist is the servant of the initial spark.&lt;/li&gt;
&lt;li&gt;Evaluation kills creativity – it must be laid aside until after raw material is created.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The act of creation does not empty the wellspring that provided that initial spark; rather, the act of creation assures the flow continues and that the wellspring will never empty. Only if it&amp;rsquo;s not used does it go dry.&lt;/li&gt;
&lt;li&gt;Imagination can assemble our fragmented experiences into a coherent whole. An artist&amp;rsquo;s work, once produced, can then reproduce the same spirit or gift initially given to them in the audience.&lt;/li&gt;
&lt;li&gt;This binds people by being a shared &amp;ldquo;gift&amp;rdquo; for all who are able to receive it. This widens one&amp;rsquo;s sense of self.&lt;/li&gt;
&lt;li&gt;The spirit of a people can be given form in art. This is how art comes to represent groups.&lt;/li&gt;
&lt;li&gt;The primary commerce of art is gift exchange, not market exchange.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="how-artists-can-survive-in-a-market-economy"&gt;How Artists Can Survive in a Market Economy&lt;/h2&gt;

&lt;p&gt;The pattern for artists to survive is that they need to be able to create their work in a protected gift sphere, free of evaluation and judgment and quantification. Only then, after the work has been made real, can they evaluate it and bring it to market. By bringing it to the market they can convert their gift into traditional forms of wealth, which they can re-invest back in their gift. But artists can&amp;rsquo;t start in the market economy, because that isn&amp;rsquo;t art. It&amp;rsquo;s &amp;ldquo;commercial art,&amp;rdquo; i.e. creating work to satisfy an external market demand, rather than giving an internal gift to the world.&lt;/p&gt;

&lt;p&gt;There are 3 ways of doing this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Sell the work itself on the market — but only after it&amp;rsquo;s been created. Artists need to be careful to keep the two separate.&lt;/li&gt;
&lt;li&gt;Patronage model. A king, or grants, or other body pays for the artist to create work.&lt;/li&gt;
&lt;li&gt;Work a job to pay the bills, and create your work outside of that. This frees artists from having to subsist on their work alone, and frees them to say what they want to say. This is, in a sense, self-patronage.&lt;/li&gt;
&lt;li&gt;Bonus way: arts support the arts. This means the community of artists creates a fund, or trust, that is invested in new artists. The fund&amp;rsquo;s money comes by taking a percentage of the profits from established artists. This is another form of patronage.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But even using these models, Hyde is careful to point out that this isn&amp;rsquo;t a way to become rich – it&amp;rsquo;s a way to &amp;ldquo;survive.&amp;rdquo; And even within these models there are still pitfalls.&lt;/p&gt;

&lt;h2 id="soviet-union-39-s-affect-on-art-in-america"&gt;Soviet Union&amp;rsquo;s affect on art in America&lt;/h2&gt;

&lt;p&gt;In the 25th Anniversary edition afterword, Hyde makes the connection that the Cold War spurred America to increase funding to the arts and sciences to demonstrate the culture and freedom of expression that a free market supports. A communist society, on the other hand, doesn&amp;rsquo;t value art and science since they don&amp;rsquo;t typically have direct economic benefit, and thus doesn&amp;rsquo;t have the same level of expression as a free market. The end of the Cold War, unfortunately, saw a decrease in funding since the external threat was removed. This was an interesting connection that I hadn&amp;rsquo;t thought about before.&lt;/p&gt;

&lt;h2 id="final-thoughts"&gt;Final Thoughts&lt;/h2&gt;

&lt;p&gt;All in all, a very thought-provoking book that I&amp;rsquo;m glad I read.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Managing Design work with Discovery Kanban at Optimizely</title>
    <link rel="alternate" href="/2016/09/20/managing-design-work-with-discovery-kanban-at-optimizely/"/>
    <id>/2016/09/20/managing-design-work-with-discovery-kanban-at-optimizely/</id>
    <published>2016-09-21T03:21:00Z</published>
    <updated>2016-09-21T03:21:00Z</updated>
    <author>
      <name>Jeff Zych</name>
    </author>
    <content type="html">&lt;p&gt;In my &lt;a href="https://medium.com/design-optimizely/discovery-kanban-at-optimizely-7b3025066d54#.iw4wf0q7e"&gt;previous article&lt;/a&gt;, I described how we transformed our Agile development process at Optimizely to include research and design by implementing our own flavor of Discovery kanban. This process gives designers and researchers space to understand our customer’s problems and explore solutions before we commit to shipping new features. In this article, I’ll go a level deeper to describe all the stages research and design work moves through during the discovery process.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Updating work on the Discovery kanban board" src="/images/2016-09-20-managing-design-work-with-discovery-kanban-at-optimizely/1-updating-board.jpeg?1474431156" /&gt;
&lt;em&gt;Updating work on the Discovery kanban board&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="background"&gt;Background&lt;/h2&gt;

&lt;p&gt;The Discovery kanban board is based on the &lt;a href="http://www.menadrc.org/#!research/c11zh"&gt;double-diamond model of design&lt;/a&gt;, which visualizes the design process as two connected diamonds. The first diamond represents understanding the problem, and the second diamond represents solving the problem. Diamonds are used to communicate that work alternates between &lt;strong&gt;divergent&lt;/strong&gt; phases, in which ideas are broadly explored, and &lt;strong&gt;convergent&lt;/strong&gt; phases, in which ideas are filtered and refined. Peter Merholz, a founding partner of UX consulting company Adaptive Path, has a &lt;a href="http://www.peterme.com/2013/09/26/the-double-diamond-model-of-product-definition-and-design/"&gt;nice overview of double diamond design&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Double Diamond design diagram" src="/images/2016-09-20-managing-design-work-with-discovery-kanban-at-optimizely/2-double-diamond.gif?1474431156" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Source: &lt;a href="http://www.menadrc.org/#!research/c11zh"&gt;http://www.menadrc.org/#!research/c11zh&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The diamonds represent different kinds of work, with defined inputs and outputs, so I adapted each diamond into a kanban board. A kanban board is simply a series of stages, represented as columns, that work moves through, with acceptance criteria that dictate when items move into each stage.&lt;/p&gt;

&lt;p&gt;The first kanban board is &lt;strong&gt;Problem Understanding&lt;/strong&gt;, where we gather information to understand and frame the problem. The second kanban board is &lt;strong&gt;Solution Exploration&lt;/strong&gt;, where we take the output of Problem Understanding and solve the specific problem we identified. Together, they make up Optimizely’s Discovery kanban process.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Overview of Discovery kanban at Optimizely" src="/images/2016-09-20-managing-design-work-with-discovery-kanban-at-optimizely/3-discovery-system.jpeg?1474431156" /&gt;
&lt;em&gt;Overview of Discovery kanban at Optimizely&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="problem-understanding"&gt;Problem Understanding&lt;/h2&gt;

&lt;p&gt;The goal of the Problem Understanding phase is to understand, refine, and frame the problem so it’s concrete and solvable. The input is a problem area to study further, and the output is a deeper understanding of the problem (often in the form of a report or presentation). The output either feeds directly into the Solution Exploration backlog, or it’s general knowledge that benefits the company (e.g. helps us make a strategic decision).&lt;/p&gt;

&lt;p&gt;Work on this board moves through 5 columns: &lt;em&gt;Backlog&lt;/em&gt;, &lt;em&gt;To Do&lt;/em&gt;, &lt;em&gt;Researching&lt;/em&gt;, &lt;em&gt;Synthesizing&lt;/em&gt;, and &lt;em&gt;Socializing&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Problem Understanding kanban board" src="/images/2016-09-20-managing-design-work-with-discovery-kanban-at-optimizely/4-problem-understanding.jpeg?1474431156" /&gt;
&lt;em&gt;Problem Understanding kanban board&lt;/em&gt;&lt;/p&gt;

&lt;h3 id="backlog"&gt;Backlog&lt;/h3&gt;

&lt;p&gt;“Backlog” is just a bucket of problem areas and pain points. It isn’t prioritized, and anyone can put a card up on the board. There’s no promise that we’ll work on it, but it’s at least captured and we can see what people are thinking about.&lt;/p&gt;

&lt;p&gt;The cards themselves are typically written in the form of a question to answer, e.g. “What metrics do people want to track?” But sometimes we just write a problem area to study, e.g. “New metrics &amp;amp; metrics builder.”&lt;/p&gt;

&lt;h3 id="to-do"&gt;To Do&lt;/h3&gt;

&lt;p&gt;Each week, we take items out of Backlog and move them into “To Do.” We typically prioritize items based on how big of a problem they are for customers (with input from the product vision, roadmap, and company priorities), but this isn’t a strict rule. For example, we may need some data to make a strategic decision, even if it isn’t the “biggest” problem.&lt;/p&gt;

&lt;p&gt;After an item has been prioritized, we write up a research plan to answer the question. This includes choosing a research method(s) that’s best suited to answering this question. There’s no prescribed format for the research plan, but at a minimum it specifies what question we’re answering and the research method to use.&lt;/p&gt;

&lt;p&gt;The research method could be a qualitative method, such as customer interviews or contextual inquiry, or a quantitative method, such as sending a survey, analyzing server logs, or querying the data warehouse. For some problems we use a combination of different methods.&lt;/p&gt;

&lt;h3 id="researching"&gt;Researching&lt;/h3&gt;

&lt;p&gt;Once a research plan has been agreed upon, work moves into the “Researching” stage. This means we execute the research plan — customer interviews are scheduled, a survey is sent out, analytics are analyzed, and so on. This stage is &lt;strong&gt;divergent&lt;/strong&gt; — we go broad to gather as much data related to the problem as we can.&lt;/p&gt;

&lt;h3 id="synthesizing"&gt;Synthesizing&lt;/h3&gt;

&lt;p&gt;After gathering data in the Researching stage, work moves into the “Synthesizing” stage. We analyze the data we’ve gathered for insights and, hopefully, a deeper understanding of the problem. This stage is &lt;strong&gt;convergent&lt;/strong&gt; — we are filtering and focusing the data into concrete takeaways and problems to be solved.&lt;/p&gt;

&lt;h3 id="socializing"&gt;Socializing&lt;/h3&gt;

&lt;p&gt;Once the research has been synthesized, it moves into the “Socializing” phase. The bulk of the work is done, but the outcome is being shared with the team or company. This takes the form of meetings, a presentation, a written report, opportunity assessment, or whatever format is appropriate for the problem being studied. At the very least, a link to the research plan and the data captured is shared with the team.&lt;/p&gt;

&lt;p&gt;Sometimes we learn that a problem is especially complicated and the research plan wasn’t sufficient to understand it. If so, we may do more research (if this problem is important enough), or just make the best decision we can based on the data we do have.&lt;/p&gt;

&lt;p&gt;After studying a particular problem, the work either ends there (in the case of things like personas or data to inform product strategy), or it turns into a problem for design to solve. In the latter case, work moves into the Solution Exploration backlog.&lt;/p&gt;

&lt;h2 id="solution-exploration"&gt;Solution Exploration&lt;/h2&gt;

&lt;p&gt;Once we understand the problem, we can start designing solutions to it. We track this work on the Solution Exploration board (a.k.a. the second diamond in double diamond design). A problem may have UX challenges to solve, technical challenges to solve (i.e. is this feasible to build?), or both. The output of the Solution Exploration phase is a finished solution to build. The solution is either a complete UI, such as mockups or a prototype, or a technical solution, such as a technical design doc or a technical prototype, which can be implemented in a production environment.&lt;/p&gt;

&lt;p&gt;In this phase, work also moves through 5 columns: &lt;em&gt;Backlog&lt;/em&gt;, &lt;em&gt;To Do&lt;/em&gt;, &lt;em&gt;Exploring &amp;amp; Thinking&lt;/em&gt;, &lt;em&gt;Iterating &amp;amp; Deciding&lt;/em&gt;, and &lt;em&gt;Ready to be Built&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Solution Exploration kanban board" src="/images/2016-09-20-managing-design-work-with-discovery-kanban-at-optimizely/5-solutions.jpeg?1474431156" /&gt;
&lt;em&gt;Solution Exploration kanban board&lt;/em&gt;&lt;/p&gt;

&lt;h3 id="backlog"&gt;Backlog&lt;/h3&gt;

&lt;p&gt;Just like in Problem Understanding, work starts life in the “Backlog.” This is a big pool of problems to solve, and anyone can add items to it. But once again, just because it’s in the backlog doesn’t mean we’ll work on it — it still needs to be prioritized.&lt;/p&gt;

&lt;h3 id="to-do"&gt;To Do&lt;/h3&gt;

&lt;p&gt;Each week we prioritize items in the Backlog and move them into “To Do.” This means we have a well-formed problem, informed by data (typically generated in Problem Understanding, but may come from other sources), that the team will design a solution to. For most problems, we formally write out a what the problem is, why it’s worth solving, who we’re solving it for, and the scope. (&lt;a href="https://docs.google.com/document/d/161XX2caxCuMczYvcboWxgfafRUUnvB63mQKmOlqxQlE/edit?usp=sharing"&gt;View the template on Google Drive&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Writing out the problem before jumping into solutions ensures the team is aligned on what we’re solving, which prevents wasted work and changing scope after a project begins. It also surfaces assumptions or incomplete data we may have, which would mean we need to go back to Problem Understanding to gather more data.&lt;/p&gt;

&lt;h3 id="exploring-amp-thinking"&gt;Exploring &amp;amp; Thinking&lt;/h3&gt;

&lt;p&gt;After a problem definition has been written, work moves into the “Exploring &amp;amp; Thinking” stage. This means we’re exploring solutions to the problem. This could be sketching, prototyping, building technical proof-of-concepts, researching potential libraries or frameworks, writing technical design docs, or whatever method is best for exploring possible solutions. This stage is &lt;strong&gt;divergent&lt;/strong&gt; — a broad range of possible solutions are being explored, but we’re not filtering or refining any particular solution yet.&lt;/p&gt;

&lt;h3 id="iterating-amp-deciding"&gt;Iterating &amp;amp; Deciding&lt;/h3&gt;

&lt;p&gt;Once a broad range of solutions have been explored, we move into the “Iterating &amp;amp; Deciding” stage. This means potential solutions are being evaluated and refined. Tradeoffs and approaches are being discussed with relevant groups. This stage is &lt;strong&gt;convergent&lt;/strong&gt; — ideas are being refined into a single, finished solution.&lt;/p&gt;

&lt;p&gt;There isn’t strict criteria for whether an item is in “Exploring &amp;amp; Thinking” or “Testing &amp;amp; Iterating.” The creative process is somewhat chaotic and people often switch between an “exploring” and “refining” mindset throughout a project. But there’s typically an inflection point at which we’re doing more refining than exploring. The exact column work is in is up to the person doing it.&lt;/p&gt;

&lt;p&gt;Having 2 columns may sound unnecessary, but it’s useful for two reasons. First, it helps communicate where in the creative process work is (especially early stage vs. late stage). This helps designers, engineers, and PMs have better discussions about the solutions being explored. Second, it encourages people to separate divergent thinking from convergent thinking. It’s easy to just go with the first idea, but that’s rarely the best solution. By encouraging exploration, we increase the odds that we’ll choose the best solution.&lt;/p&gt;

&lt;h3 id="ready-to-be-built"&gt;Ready to be Built&lt;/h3&gt;

&lt;p&gt;After we’ve iterated enough we’re left with one finished solution that’s ready to be built and shipped to customers. A “finished solution” is one for which all edge cases have been thought through, it’s been vetted by relevant parties, and there are no major questions open that would slow down development. Finished solutions are in the form of mockups or a prototype, if a UX solution, or a technical design doc or proof-of-concept, if a technical feasibility solution. The finished solution then moves into engineering’s backlog, where it gets prioritized against all the other potential work to be done.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Together, the Problem Understanding and Solution Exploration kanban boards make up Discovery kanban. The definition of each column may sound prescriptive, but it’s actually a suggested process to follow. Work doesn’t always move linearly through each column, and we aren’t sticklers about meeting exact acceptance criteria to move work forward. The important thing is that we’re working together to solve our customer’s biggest problems, ultimately increasing customer value and business value.&lt;/p&gt;

&lt;p&gt;Since implementing this process we’ve gotten better at prioritizing the biggest customer problems to understand, have space to explore solutions to those problems, and are &lt;a href="https://community.optimizely.com/t5/Product-What-s-New/bg-p/blog-new-product"&gt;regularly shipping work to customers&lt;/a&gt;. No process is perfect, but we’re always trying to improve how we work in an effort to consistently ship great products to our customers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://medium.com/design-optimizely/managing-design-work-with-discovery-kanban-at-optimizely-9918e7959be5"&gt;This post originally appeared on the Design @ Optimizely blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Discovery Kanban at Optimizely</title>
    <link rel="alternate" href="/2016/07/17/discovery-kanban-at-optimizely/"/>
    <id>/2016/07/17/discovery-kanban-at-optimizely/</id>
    <published>2016-07-18T04:47:00Z</published>
    <updated>2016-07-18T04:47:00Z</updated>
    <author>
      <name>Jeff Zych</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="Discovery work planning meeting" src="/images/2016-07-17-discovery-kanban-at-optimizely/discovery-planning.jpeg?1468818434" /&gt;
&lt;em&gt;Discovery work planning meeting&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Like most tech startups, Optimizely uses an Agile process to build software. Agile has been great at helping us plan what we’re building, coordinate across teams, and ship iteratively. Agile’s focus, however, is on shipping working software, which meant design and research were awkwardly shoehorned into the process.&lt;/p&gt;

&lt;iframe width="700" height="393" src="https://www.youtube.com/embed/oyVksFviJVE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;em&gt;Scrum, according to HBO’s Silicon Valley&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Practically speaking, this meant we got into a habit of building a feature while it was being designed. This put pressure on designers to produce mockups of a feature in order to “unblock” engineers, which didn’t give them room to understand the problem and iterate on solutions. And it rarely provided space for our researchers to gather data to understand the problem, or do usability testing.&lt;/p&gt;

&lt;p&gt;This caused problems on the engineering side, too: since engineers were building a feature while it was being designed, the requirements were shifting as we explored solutions. This slowed down the development process since they would have questions about what to build, and features would have to be rewritten as the designs evolved. This also made it hard to estimate how long it would take to build, which led to missed deadlines, cutting corners (such as not writing unit tests and or doing formal QA), and low morale.&lt;/p&gt;

&lt;p&gt;In short, our process didn’t have high velocity or produce high quality solutions.&lt;/p&gt;

&lt;p&gt;To improve this situation, we split our product development process into two phases: &lt;strong&gt;Discovery&lt;/strong&gt; and &lt;strong&gt;Delivery&lt;/strong&gt;. In the Discovery phase, the goal is to understand and solve our customer’s problems. The output is &lt;strong&gt;finished designs&lt;/strong&gt; that solve for all use cases. After designs are done, work moves into the Delivery phase. The goal of this phase is to ship the finished solution to customers, and uses our standard Agile process to manage and plan the work.&lt;/p&gt;

&lt;p&gt;The key to this system is that design and research are an &lt;strong&gt;explicit part of the process&lt;/strong&gt;, and there is acceptance criteria that must be met before engineers write any code.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Diagram of Optimizely’s product development process" src="/images/2016-07-17-discovery-kanban-at-optimizely/discovery-system.jpeg?1468818434" /&gt;
&lt;em&gt;Diagram of Optimizely’s product development process&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To help with organizational buy-in and planning, Discovery work is tracked on a physical kanban board in our office. The board is split into two parts: &lt;strong&gt;Problem Understanding (Research)&lt;/strong&gt;, and &lt;strong&gt;Solution Exploration (Design)&lt;/strong&gt;. In the Problem Understanding phase we gather data to help us understand and frame the problem. Data includes both qualitative and quantitative data, such as customer interviews, surveys, support tickets, sales call feedback, product usage, and NPS feedback. That data either becomes general company knowledge, such as our user personas, or feeds directly into the Solution Exploration phase.&lt;/p&gt;

&lt;p&gt;In Solution Exploration, designers use the data gathered during Problem Understanding to frame the problem to be solved. Designers explicitly write down what the problem is, use cases, target users, and anything that’s out of scope. After getting buy-in from the PM and team, they explore solutions by creating sketches, wireframes, and prototypes. Engineers are looped in to provide feedback on technical feasibility. Researchers do usability testing in this phase as well. Finally, the output is finished designs that are fully thought through. This means there are no open questions about what a feature does that would slow down an engineer during development.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Optimizely’s Discovery kanban board" src="/images/2016-07-17-discovery-kanban-at-optimizely/board.jpeg?1468818434" /&gt;
&lt;em&gt;Optimizely’s Discovery kanban board&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="is-this-waterfall"&gt;Is this waterfall?&lt;/h2&gt;

&lt;p&gt;This process is more structured than our previous Agile process, but not as rigid as a typical waterfall process. We don’t “throw work over the wall” to each other, stop requirements from changing, or rely on documentation to communicate across teams.&lt;/p&gt;

&lt;p&gt;Additionally, designers still sit with scrum teams and attend standups. This keeps whole team involved throughout the entire process. Although engineers aren’t building anything during the Discovery phase, they are aware of what problem we’re solving, why we’re solving it, and proposed solutions. And designers are included in the Delivery phase to make sure the finished feature matches what they designed.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Since rolling out this system across our scrum teams, our design and development process has been much smoother. Researchers have a stronger voice in product development, designers have space to iterate, and engineers are shipping faster. By giving designers and researchers an explicit place in our product development process, we’ve improved our planning, increased coordination and alignment across teams, and upped our velocity and quality.&lt;/p&gt;

&lt;h2 id="further-reading"&gt;Further Reading&lt;/h2&gt;

&lt;p&gt;These posts all informed my thinking for why I implemented Discovery Kanban at Optimizely:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://johnpeltier.com/blog/2015/07/12/dual-track-agile-better-products-faster/"&gt;Dual Track Agile: Better Products, Faster&lt;/a&gt; by John Peltier&lt;/li&gt;
&lt;li&gt;&lt;a href="http://svpg.com/dual-track-scrum/"&gt;Dual Track Scrum&lt;/a&gt; by Marty Cagan&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jpattonassociates.com/common-agile-isnt-for-startups/"&gt;Common Agile Practice isn’t for Startups&lt;/a&gt; by Jeff Patton&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This article originally appeared on &lt;a href="https://medium.com/design-optimizely/discovery-kanban-at-optimizely-7b3025066d54#.3iadc9q4l"&gt;Medium&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>A Look Back at My Early Web Design Work</title>
    <link rel="alternate" href="/2016/07/02/a-look-back-at-my-early-web-design-work/"/>
    <id>/2016/07/02/a-look-back-at-my-early-web-design-work/</id>
    <published>2016-07-02T21:41:00Z</published>
    <updated>2016-07-02T21:41:00Z</updated>
    <author>
      <name>Jeff Zych</name>
    </author>
    <content type="html">&lt;p&gt;In the spirit of &lt;a href="/2015/08/30/get-comfortable-sharing-shitty-work/"&gt;sharing my work&lt;/a&gt;, I thought it would be fun to look back at some early web sites I designed and built.&lt;/p&gt;

&lt;h2 id="first-site-ced-ventura"&gt;First site: CED Ventura&lt;/h2&gt;

&lt;p&gt;I built this site while I was in high school in 2000 or 2001 for my dad, who manages the Ventura branch of &lt;a href="http://www.cedcareers.com/"&gt;CED&lt;/a&gt;. It was the first full site I designed and built. I built it as the final project of a web design class I took in high school, and it went live shortly after that (you can still see it on the &lt;a href="https://web.archive.org/web/20020123140629/http://www.cedventura.com/"&gt;Wayback Machine&lt;/a&gt;). Prior to this I had been experimenting with HTML and made some sample sites, but had never made a full site.&lt;/p&gt;

&lt;p&gt;&lt;img alt="CED Ventura" src="/images/2016-07-02-a-look-back-at-my-early-web-design-work/1-ced.png?1467509653" /&gt;&lt;/p&gt;

&lt;p&gt;Fun facts about this project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;No CSS&lt;/strong&gt;. CSS barely existed back then and didn&amp;rsquo;t become practical to use until the mid-2000s. I had never even heard of CSS when I made this site. All styling comes from HTML tags like &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt;, images, and some style attributes like &lt;code&gt;valign&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Frames&lt;/strong&gt;. The whole site is built in a &lt;code&gt;&amp;lt;frameset&amp;gt;&lt;/code&gt; — one for the top logo area, another for the navigation, and a third for the content. Back then that was the best way to reuse content across pages, since static site generators didn&amp;rsquo;t exist and I didn&amp;rsquo;t know anything about server-side programming at the time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tables for positioning&lt;/strong&gt;. Since I knew nothing about CSS back then, and it wasn&amp;rsquo;t a viable option anyway, I used tables to position everything.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spacer gifs&lt;/strong&gt;! In addition to using tables for positioning, I also sprinkled spacer gifs throughout the site to position elements.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hand-coded&lt;/strong&gt;. Yep, the whole site was coded by hand, before that became a retro, throwback badge of honor. I seem to recall using Dreamweaver to build the site, but was somehow already experienced enough to know the code it generated was shit, so I primarily lived in the code view.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Animated gifs&lt;/strong&gt;. You can&amp;rsquo;t tell from this static screenshot, but the homepage had not 1, but &lt;strong&gt;2&lt;/strong&gt; animated gifs on it: the logo in the top left that says &amp;ldquo;CED Consolidated Electrical Distributors,&amp;rdquo; which fades in one letter at a time over the excruciatingly long period of about 10 seconds (longer than your typical Snapchat); and the map, which features each dot lighting up to emphasize how many locations CED has nationwide. I thought I was &lt;em&gt;the shit&lt;/em&gt; for making each of these animated gifs. Once again, the &lt;a href="https://web.archive.org/web/20020123140629/http://www.cedventura.com/"&gt;Wayback Machine&lt;/a&gt; will let you experience these gifs in all their glory.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1,300px wide top banner&lt;/strong&gt;. At the time, a 1,300 pixel wide image for the banner seemed &lt;em&gt;absurdly&lt;/em&gt; wide and I didn&amp;rsquo;t think there&amp;rsquo;d ever be a monitor large enough to display it. Boy was I wrong. When viewed on any computer today the image will start to repeat.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="the-local-oafs"&gt;The Local Oafs&lt;/h2&gt;

&lt;p&gt;This is the second full website I designed and built. In true American tradition, I made this site for my closest friends&amp;rsquo; band, The Local Oafs (named after a &lt;a href="https://youtu.be/Lsnc5FFI5Dw?t=454"&gt;Simpsons reference&lt;/a&gt;, if you were wondering). I&amp;rsquo;m not sure it was ever on the public internet, but if so it was probably hosted on Geocities.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Local Oafs splash page" src="/images/2016-07-02-a-look-back-at-my-early-web-design-work/2-oafs1.png?1467509653" /&gt;&lt;/p&gt;

&lt;p&gt;For whatever reason, I added a splash page to the site. I guess that was all the rage back then. I also designed the sweet logo with one of the band members. We also printed up stickers of the logo, and stuck it on a shirt.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Local Oafs homepage" src="/images/2016-07-02-a-look-back-at-my-early-web-design-work/2-oafs2.png?1467509653" /&gt;&lt;/p&gt;

&lt;p&gt;Pretty sweet grunge look going on here, which I made in Photoshop. This site also features a table layout, spacer gifs, and no CSS.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Local Oafs bio page" src="/images/2016-07-02-a-look-back-at-my-early-web-design-work/2-oafs3.png?1467509653" /&gt;&lt;/p&gt;

&lt;p&gt;I made bio pages for each band member, adding a different rad Photoshop effect to each bio pic. I really hope we were being ironic, but I fear we probably thought this was actually cool. I was also the band&amp;rsquo;s photographer, and did a photoshoot to populate the site with pictures.&lt;/p&gt;

&lt;h2 id="anacapa-fine-yarns"&gt;Anacapa Fine Yarns&lt;/h2&gt;

&lt;p&gt;This is the first site I actually got paid for, which was hugely exciting at the time (2004 or 2005, I believe). I think I got a couple hundred bucks, which felt like highway robbery. I built the site for my parents&amp;rsquo; friend who opened this yarn shop in Ventura.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Anacapa Fine Yarns homepage" src="/images/2016-07-02-a-look-back-at-my-early-web-design-work/3-afy.png?1467509653" /&gt;&lt;/p&gt;

&lt;p&gt;Oof those colors. Not sure what I was thinking there. And the nav items are green when hovered 😬. And such centering!&lt;/p&gt;

&lt;p&gt;For whatever reason I have two versions of the site on my computer. I think I rebuilt the site for her about a year after the initial version. Unfortunately the design updates I made didn&amp;rsquo;t include a better color palette. The biggest update, however, was that I built the site with CSS. This must have been the first real site that I used CSS on. It features great selectors like &lt;code&gt;div#main&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The properties are surprisingly well organized, though. I grouped them by position, width/height, typography, and finally visual styles (background, border, etc.). The selectors are all quite flat, and I indented them to indicate the nesting in the HTML. Which seems pretty forward thinking considering pre-processors didn&amp;rsquo;t exist yet and I was pretty new to CSS.&lt;/p&gt;

&lt;h2 id="hamlet-on-the-moon"&gt;Hamlet on the Moon&lt;/h2&gt;

&lt;p&gt;In college a close friend of mine did an adaption of Hamlet set on the moon, aptly named &amp;ldquo;Hamlet on the Moon.&amp;rdquo; It was actually a full play that was produced and performed at UCSB. It featured Polonius as a robot named &amp;ldquo;Poloniusbot,&amp;rdquo; Ophelia as a cyborg named &amp;ldquo;Opheliatron,&amp;rdquo; and Rosencrantz and Guildenstern as a two-headed monster. I designed and built the website, posters, and program for them.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Hamlet on the Moon homepage" src="/images/2016-07-02-a-look-back-at-my-early-web-design-work/4-hamlet-site.png?1467509653" /&gt;&lt;/p&gt;

&lt;p&gt;Can you tell this play takes place on the moon? You may need to look again to pick up on the space theme. I especially love the NASA-y font for the nav, and that I made it a literal block of text by adjusting the type size to maintain a fixed width. And there&amp;rsquo;s virtually no vertical space between them. I had to do the text with images since web fonts were still years away.&lt;/p&gt;

&lt;p&gt;And don&amp;rsquo;t miss that great pseudo-drop cap in the first paragraph.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Hamlet on the Moon poster" src="/images/2016-07-02-a-look-back-at-my-early-web-design-work/4-hamlet-poster.png?1467509653" /&gt;&lt;/p&gt;

&lt;p&gt;This is one of two posters I created for them, which I believe they actually printed and put up around campus. The oddest thing about the posters is that neither feature dates, times, location, or the website&amp;rsquo;s URL. I have no idea why we chose to only have the email address on the poster.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Hamlet on the Moon program" src="/images/2016-07-02-a-look-back-at-my-early-web-design-work/4-hamlet-program.png?1467509653" /&gt;&lt;/p&gt;

&lt;p&gt;The program, on the other hand, does include the date, time, and location, even though you&amp;rsquo;d have to be at the play already to be holding one of these. But overall it actually came out pretty decently. I was taking typography and print layout classes at the time and put those skills to use. It&amp;rsquo;s at least a more understated and mature design than the website.&lt;/p&gt;

&lt;h2 id="pixie"&gt;Pixie&lt;/h2&gt;

&lt;p&gt;Around 2008 or 2009 my close friend (who also did Hamlet on the Moon) started building Pixie, a web-based pixel art editor. I helped out with design and frontend engineering. I also built a couple features, like fill. I believe this was my first exposure to HAML and SASS. Looking back on it, this was the first time I did product design (although I wouldn&amp;rsquo;t have called it that back then).&lt;/p&gt;

&lt;p&gt;&lt;img alt="Pixie pixel editor" src="/images/2016-07-02-a-look-back-at-my-early-web-design-work/5-pixie.png?1467509653" /&gt;&lt;/p&gt;

&lt;p&gt;The design is pretty clean. Probably a little &lt;em&gt;too&lt;/em&gt; clean. Those left icons are about to float off the page. And are they even clickable? I kind of like the way the line draws your eye from the top left to bottom right, even though the line itself strangles the page a bit. The left button style and icons are weirdly inconsistent with the top button style and icons. Perhaps I was trying to draw a distinction between image editing tools, like drawing and erasing, and document controls, like &amp;ldquo;Save&amp;rdquo;? And what is that bottom icon supposed to do? The &amp;ldquo;logo&amp;rdquo; is also odd – where did that orange come from? I still hadn&amp;rsquo;t really figured out &amp;ldquo;color palettes.&amp;rdquo;&lt;/p&gt;

&lt;h2 id="cal-cooking-club"&gt;Cal Cooking Club&lt;/h2&gt;

&lt;p&gt;In 2010 I was in grad school and a member of the Cal Cooking Club, so I made their website. It features web fonts and a clean, modern design! I believe I used this for a class project, too. I think I made a static version of the site first, and then converted it to a Wordpress theme so the officers could update the site themselves.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Cal Cooking Club homepage" src="/images/2016-07-02-a-look-back-at-my-early-web-design-work/6-ccc.png?1467509653" /&gt;&lt;/p&gt;

&lt;p&gt;Not the pinnacle of design, but it at least doesn&amp;rsquo;t make me cringe. The oddest thing about the design is that I tried to keep the site on a grid, which is why the nav items have weird spacing between them. I think I had just read &lt;a href="https://www.subtraction.com/2010/11/05/i-wrote-a-book/"&gt;Ordering Disorder&lt;/a&gt; by Khoi Vinh and went a bit too far trying to put his principles into practice.&lt;/p&gt;

&lt;h2 id="privacy-patterns"&gt;Privacy Patterns&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://privacypatterns.org"&gt;Privacy Patterns&lt;/a&gt; is a project spearheaded by one of my grad school professors and a PhD student, with the goal of documenting best practices for building software that supports privacy. I got involved to help them design and build the site.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Privacy Patterns homepage" src="/images/2016-07-02-a-look-back-at-my-early-web-design-work/7-privacy1.png?1467509653" /&gt;&lt;/p&gt;

&lt;p&gt;We built the site using &lt;a href="http://hyde.github.io/"&gt;Hyde&lt;/a&gt;, a static site generator. All the content was stored in Markdown for ease of authoring and portability. I believe it&amp;rsquo;s the first statically-generated site I built (with the help of a fellow grad student). Surprisingly I didn&amp;rsquo;t use SASS, even though I had at least experimented with it at this point. If I had to guess, it was probably because Hyde is built in Python, and SASS in Ruby.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Privacy Patterns article" src="/images/2016-07-02-a-look-back-at-my-early-web-design-work/7-privacy2.png?1467509653" /&gt;&lt;/p&gt;

&lt;p&gt;Overall the site isn&amp;rsquo;t too bad. Clean design, no weird colors, and good type hierarchy.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;It&amp;rsquo;s humbling to look back at where I started and reflect on how far I&amp;rsquo;ve come since. Best practices, technologies, and design trends all shaped my work, and have changed a lot over the years. It will be fascinating to look back at the work I&amp;rsquo;m doing now and marvel at the misguided decisions that seemed so right at the time.&lt;/p&gt;
</content>
  </entry>
</feed>
