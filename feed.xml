<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jeff Zych</title>
  <subtitle></subtitle>
  <id>http://jlzych.com/</id>
  <link href="http://jlzych.com/"/>
  <link href="http://jlzych.com/feed.xml" rel="self"/>
  <updated>2014-12-01T02:13:00Z</updated>
  <author>
    <name>Jeff Zych</name>
  </author>
  <entry>
    <title>Optimizely's iOS SDK Hits Version 1.0!</title>
    <link rel="alternate" href="/2014/11/30/optimizely-s-ios-sdk-hits-version-1-0/"/>
    <id>/2014/11/30/optimizely-s-ios-sdk-hits-version-1-0/</id>
    <published>2014-12-01T02:13:00Z</published>
    <updated>2014-12-01T02:13:00Z</updated>
    <author>
      <name>Jeff Zych</name>
    </author>
    <content type="html">&lt;p&gt;On Novemeber 18th, 2014, Optimizely officially released version 1.0 of our &lt;a href="https://www.optimizely.com/mobile"&gt;iOS SDK&lt;/a&gt; and a new mobile editing experience. As the lead designer of this project, I&amp;rsquo;m extremely proud of the progress we&amp;rsquo;ve made. This is just the beginning — there&amp;rsquo;s a lot more work to come! Check out the product video below:&lt;/p&gt;

&lt;iframe width="560" height="315" src="//www.youtube.com/embed/pjnHonrJykg" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Stay tuned for future posts about the design process.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Testing Theory: Mo' Choices, Mo' Problems</title>
    <link rel="alternate" href="/2014/10/25/testing-theory-mo-choices-mo-problems/"/>
    <id>/2014/10/25/testing-theory-mo-choices-mo-problems/</id>
    <published>2014-10-25T20:17:00Z</published>
    <updated>2014-10-25T20:17:00Z</updated>
    <author>
      <name>Jeff Zych</name>
    </author>
    <content type="html">&lt;p&gt;When asked, most of us would say we’d prefer more options to choose from, rather than fewer. We want to make the best possible choice, so more options should increase the likelihood we’ll choose correctly. But in actuality, research shows that more choice usually leads to worse decisions, or the abandonment of choice altogether. In this post, I will describe how we can use this knowledge to generate &lt;a href="https://www.optimizely.com/ab-testing/"&gt;A/B test&lt;/a&gt; ideas.&lt;/p&gt;

&lt;h2&gt;Cognitive Overload&lt;/h2&gt;

&lt;p&gt;More choices are more mentally taxing to compare and evaluate, leading to cognitive overload and a decrease in decision making skills. Anecdotally, it&amp;rsquo;s the experience of walking into a supermarket to buy toothpaste, only to be confronted by an endless wall of brands and specialized types that all seem roughly the same. You&amp;rsquo;re quickly overwhelmed, and with no distinguishing characteristics to help you choose, you just grab whatever you bought last time and get the hell out of there.&lt;/p&gt;

&lt;p&gt;This common experience was formally studied by &lt;a href="http://www.columbia.edu/~ss957/articles/Choice_is_Demotivating.pdf"&gt;Iyengar and Lepper&lt;/a&gt; (pdf) (2000), who compared buying rates when shoppers were presented 24 jams to sample, versus just 6. They found when 24 jams were available, only 3% of people bought a jar. But when only 6 jams were available, 30% bought a jar. By providing fewer jams to sample, it was easier for shoppers to compare them to each other and make a decision.&lt;/p&gt;

&lt;h2&gt;Generating Test Ideas&lt;/h2&gt;

&lt;p&gt;From these findings you can apply a simple rule to your site or mobile app to generate test ideas: any time a user has to make a choice (e.g. deciding which product to buy; clicking a navigation link; etc.), reduce the number of available options. Here are some examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Have just one call-to-action.&lt;/strong&gt; If you have “Sign Up” and “Learn More” buttons, for example, try removing the “Learn More” button. (See below for an example).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Remove navigation items.&lt;/strong&gt; For example, Amazon has been continually simplifying its homepage by hiding its store categories in favor of search. Shoppers don&amp;rsquo;t need to think about which category might have their desired item; rather, they just search for it. (For help simplifying your navigation, check out this &lt;a href="http://www.smashingmagazine.com/2013/12/03/efficiently-simplifying-navigation-information-architecture/"&gt;series of articles on Smashing Magazine&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Try offering fewer products.&lt;/strong&gt; See if hiding unpopular or similar products increases purchases of the few that remain.&lt;/li&gt;
&lt;li&gt;If removing products isn’t feasible, try asking people to make a series of simple choices to narrow down their options. Returning to the toothpaste example, you could ask people to choose a flavor, then a type (whitening, no-fluoride, baking soda, etc.), and present toothpastes that only match those choices. The key is to make sure your customers understand each facet, and the answers are distinct and not too numerous (i.e. less than 6).&lt;/li&gt;
&lt;li&gt;Break up checkout forms into discrete steps.&lt;/li&gt;
&lt;li&gt;Remove navigation from checkout funnels. Many eCommerce sites (like Crate&amp;amp;Barrel and Amazon) do this because it leaves one option to the user — completing the purchase (see below).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img alt="&amp;quot;Crate&amp;Barrel checkout flow comparison&amp;quot;" src="http://jlzych.com/images/2014-10-25-testing-theory-mo-choices-mo-problems/crateandbarrel-noNav.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By removing the main navigation from their checkout flow, Crate&amp;amp;Barrel increased average order value by 2% and revenue per visitor by 1%.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="&amp;quot;SeeClickFix call-to-action comparison&amp;quot;" src="http://jlzych.com/images/2014-10-25-testing-theory-mo-choices-mo-problems/SeeClickFix.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By removing extraneous calls-to-action (“Free Sign Up” and “Go Pro! Free Trial”), SeeClickFix (a service for reporting neighborhood issues) focused users’ attention on the search bar and increased engagement by 8%.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Know your audience&lt;/h2&gt;

&lt;p&gt;Of course, there are times when more choice is better. Broadly speaking, experts typically know what they&amp;rsquo;re looking for, and are able to evaluate many options because they understand all the distinguishing minutia. For example, professional tennis players can rapidly narrow down the choice of thousands of racquets to just a few because they understand the difference between different materials, weights, head sizes, lengths, and so on. If you don&amp;rsquo;t offer what they&amp;rsquo;re looking for, or make it easy to get to what they want, they&amp;rsquo;ll look elsewhere. For this reason, it&amp;rsquo;s important that you understand your audience and cater to their buying habits.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;We&amp;rsquo;re trained from an early age to believe that more choice is always better. But in actuality, more choices are mentally taxing, and lead to poor decision making or the abandonment of choice altogether. By testing the removal or simplification of options, you can increase sales, conversions, and overall customer satisfaction.&lt;/p&gt;

&lt;h3&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Botti and Iynegar – &lt;a href="http://faculty.london.edu/sbotti/assets/documents/Dark_side_of_choice.pdf"&gt;The Dark Side of Choice&lt;/a&gt; (pdf)&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>What Does Computer Science and Typography Have in Common?</title>
    <link rel="alternate" href="/2014/10/18/what-does-computer-science-and-typography-have-in-common/"/>
    <id>/2014/10/18/what-does-computer-science-and-typography-have-in-common/</id>
    <published>2014-10-18T21:10:00Z</published>
    <updated>2014-10-18T21:10:00Z</updated>
    <author>
      <name>Jeff Zych</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://www.frerejones.com/blog/scrambled-eggs-and-serifs/"&gt;Naming is the hardest part.&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>How Tina Fey’s “Lessons From Late Night” Apply to Product Design</title>
    <link rel="alternate" href="/2014/10/05/how-tina-fey-s-lessons-from-late-night-apply-to-product-design/"/>
    <id>/2014/10/05/how-tina-fey-s-lessons-from-late-night-apply-to-product-design/</id>
    <published>2014-10-06T00:13:00Z</published>
    <updated>2014-10-06T00:13:00Z</updated>
    <author>
      <name>Jeff Zych</name>
    </author>
    <content type="html">&lt;p&gt;In “&lt;a href="http://www.newyorker.com/magazine/2011/03/14/lessons-from-late-night"&gt;Lessons From Late Night&lt;/a&gt;”, Tina Fey discusses the lessons she learned from Lorne Michaels while working at SNL. Turns out most of them are lessons I’ve learned in product design while working at &lt;a href="https://www.optimizely.com"&gt;Optimizely&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;“Producing is about discouraging creativity.”&lt;/h2&gt;

&lt;p&gt;She goes on to say, “A TV show comprises many departments — costumes, props, talent, graphics, set dressing, transportation. Everyone in every department wants to show off his or her skills and contribute creatively to the show, which is a blessing.” But this creative energy must be harnessed and directed in a way that contributes positively to the sketch.&lt;/p&gt;

&lt;p&gt;Applied to design, this basically means you need to say “no” a lot. Everyone’s full of ideas and will suggest things like, “Why don’t we just add a toggle so the user can choose their preference? More choice is good, right?” And then you need to explain that actually, users typically stick with the defaults, and don’t spend time configuring their software, and letting them toggle this option has all kinds of other product implications, so, no, sorry, lets try this other solution instead.&lt;/p&gt;

&lt;h2&gt;“The show doesn’t go on because it’s ready; it goes on because it’s eleven-thirty.”&lt;/h2&gt;

&lt;p&gt;This is a lesson in perfection. She elaborates:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You have to try your hardest to be at the top of your game and improve every joke until the last possible second, but then you have to let it go.
You can’t be that kid standing at the top of the waterslide, overthinking it. You have to go down the chute. […] You have to let people see what you wrote. It will never be perfect, but perfect is overrated. Perfect is boring on live television.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Just change a few words to “design” and “the web,” and this applies perfectly to product design. Designers can polish forever, but perfect is the enemy of done. But unlike SNL, Optimizely (and I imagine most startups) doesn’t often have hard 11:30 PM Saturday night deadlines, which means we have a tendency to let dates slip. I used to think that was great (“I can spend time polishing!”), but I’ve found that deadlines force you to make tough decisions in order to release product (such as cutting the scope of a feature). And that extra “polish” I think I’m adding is just me overthinking decisions I’ve already made and, oh, guess what, now that actual human beings are using it we need to cut or change those corners of the UI you’ve polished because actually they don’t matter at all now that it’s being used in the real world.&lt;/p&gt;

&lt;h2&gt;“When hiring, mix Harvard nerds with Chicago improvisers and stir.”&lt;/h2&gt;

&lt;p&gt;The gist of this lesson is that diversity of thought is important when hiring. Having a variety of designers with different backgrounds and skills results in a better product.&lt;/p&gt;

&lt;p&gt;At Optimizely, we have a mix of visual-designers-turned-UX-designers, designers formally trained in human–computer interaction and psychology (the Harvard nerds of the group, such as yours truly), and developers turned designers. We all push and learn from each other. “The Harvard guys check the logic and grammatical construction of every joke, and the improvisers teach them how to be human. It’s Spock and Kirk.” In our case, the HCI folks make sure designs are usable and don’t violate established interaction patterns, and the visual designers make sure we aren’t shipping a bunch of gray boxes.&lt;/p&gt;

&lt;h2&gt;“Never cut to a closed door.”&lt;/h2&gt;

&lt;p&gt;As applied to user experience design, this is a way of saying, “don’t leave the user at a dead end”. If users get to a screen where they can’t do anything, then you’ve lost them. Products often dump users in empty screens that have no content (we’ve made this mistake plenty at Optimizely), which lowers engagement and increases churn. Marketing pages can lack a call to action, leading to a high bounce rate. You should always provide clear next steps.&lt;/p&gt;

&lt;h2&gt;“Don’t hire anyone you wouldn’t want to run into in the hallway at three in the morning.”&lt;/h2&gt;

&lt;p&gt;This is a way of saying hire people you enjoy working with. At Optimizely, culture is a huge part of the hiring process. Work is easier, more fun, and turns out better when you’re working with people you like and respect.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Writing comedy and designing product don’t sound related, but there’s a lot of overlap in the creative process. As Tina’s lessons show, they each have a lot they can learn from each other.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>1-year Retrospective</title>
    <link rel="alternate" href="/2014/08/17/1-year-retrospective/"/>
    <id>/2014/08/17/1-year-retrospective/</id>
    <published>2014-08-18T04:13:00Z</published>
    <updated>2014-08-18T04:13:00Z</updated>
    <author>
      <name>Jeff Zych</name>
    </author>
    <content type="html">&lt;p&gt;August 2nd marked the 1-year anniversary of &lt;a href="http://jlzych.com/2013/08/02/everyones-reading-this-increase-conversions-with-social-proof/"&gt;my first post&lt;/a&gt;, so it seems appropriate to do a quick retrospective of my first year blogging on my personal site.&lt;/p&gt;

&lt;h2&gt;Writing Stats&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve written 22 posts in that time, which is a rate of 1.83 per month. My (unstated) goal was 2 per month, so I wasn&amp;rsquo;t far off. My most prolific month is a tie between September 2013 and May 2014, in which I wrote 4 articles each. But in September I re-used some posts I had written previously for &lt;a href="https://www.optimizely.com"&gt;Optimizely&lt;/a&gt;, so May wins for more original content.&lt;/p&gt;

&lt;p&gt;Sadly, there were two months in which I didn&amp;rsquo;t write any articles: Dec 2013, and July 2014. In December I was in India, so that&amp;rsquo;s a pretty legitimate reason. July, however, has no good reason. It was generally a busy month, but I should have made time to write at least one post. And looking closer, just saying &amp;ldquo;July&amp;rdquo; makes it sound better than it actually was - I had a seven week stretch of no posts then!&lt;/p&gt;

&lt;p&gt;My longest article was &lt;a href="http://jlzych.com/2014/02/11/re-designing-optimizely-s-preview-tool/"&gt;&amp;ldquo;Re-Designing Optimizely&amp;rsquo;s Preview Tool&amp;rdquo;&lt;/a&gt;, clocking in at 4,158 words!&lt;/p&gt;

&lt;h2&gt;Site Analytics&lt;/h2&gt;

&lt;p&gt;Diving into Google Analytics, I&amp;rsquo;ve had 3,092 page views, 2,158 sessions, and 1,778 users. I seem to get a steady trickle of traffic every day, with a few occasional spikes in activity (which are caused by retweets, Facebook posts, or sending posts to all of Optimizely). All of which I find pretty surprising since I don&amp;rsquo;t write very regularly, and I don&amp;rsquo;t do much to actively seek readers.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Google Analytics stats for the past year" src="http://jlzych.com/images/2014-08-17-1-year-retrospective/ga.png" /&gt;&lt;/p&gt;

&lt;p&gt;So where do these visitors (i.e. you) come from? Google Analytics tells me that, even more surprisingly, the top two sources are organic search and direct, respectively. From looking through the search terms used to find me, they can be grouped into three categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;My name: this is most likely people who are interviewing at Optimizely.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jlzych.com/2013/08/15/performance-comparison-of-serving-fonts-through-typekit-vs-cloud-typography/"&gt;Cloud.typography and Typekit comparison&lt;/a&gt;: people are interested in a performance comparison of these two services. And in fact, I wrote this article precisely because I was searching for that information myself, but there weren&amp;rsquo;t any posts about it.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jlzych.com/2013/09/30/framing-your-message-for-maximum-impact/"&gt;Framing messages&lt;/a&gt;: I wrote a post about the behavioral economics principle of framing, and how you can use it to generate A/B testing ideas. Apparently people want help writing headlines!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Top Posts&lt;/h2&gt;

&lt;p&gt;Continuing to dig into Google Analytics, these are my three most popular posts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="http://jlzych.com/2013/10/08/extend-sass-s-awkward-stepchild/"&gt;&amp;ldquo;Extend – SASS&amp;rsquo;s Awkward Stepchild&amp;rdquo;&lt;/a&gt;, with 354 page views.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jlzych.com/2014/02/11/re-designing-optimizely-s-preview-tool/"&gt;&amp;ldquo;Re-Designing Optimizely&amp;rsquo;s Preview Tool&amp;rdquo;&lt;/a&gt;, with 306 page views.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jlzych.com/2013/08/15/performance-comparison-of-serving-fonts-through-typekit-vs-cloud-typography/"&gt;&amp;ldquo;Performance comparison of serving fonts through Typekit vs Cloud.typography&amp;rdquo;&lt;/a&gt;, with 302 page views.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;They&amp;rsquo;re all pretty close in terms of traffic, but quite different in terms of content. So what does this tell me about what&amp;rsquo;s resonating with you, the reader, and what I should continue doing going forward? The main commonality is that all of those articles are original, in-depth content. In fact, this holds true past the top 10. My shorter posts that are responses to other people&amp;rsquo;s posts don&amp;rsquo;t receive as much mind share. I&amp;rsquo;ll have to think more about whether they&amp;rsquo;re worth doing at all anymore.&lt;/p&gt;

&lt;h2&gt;End&lt;/h2&gt;

&lt;p&gt;Overall I&amp;rsquo;m pretty satisfied with those numbers, and the content I&amp;rsquo;ve been able to produce. Going forward I hope I can write more in-depth content, especially about the design process of my projects (which are my favorite to write). Here&amp;rsquo;s to the upcoming year!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>DRY isn't the One True Principle of CSS</title>
    <link rel="alternate" href="/2014/08/10/dry-isn-t-the-one-true-principle-of-css/"/>
    <id>/2014/08/10/dry-isn-t-the-one-true-principle-of-css/</id>
    <published>2014-08-10T22:50:00Z</published>
    <updated>2014-08-10T22:50:00Z</updated>
    <author>
      <name>Jeff Zych</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://benfrain.com/"&gt;Ben Frain&lt;/a&gt; wrote a &lt;a href="http://benfrain.com/enduring-css-writing-style-sheets-rapidly-changing-long-lived-projects/"&gt;great article&lt;/a&gt; of recommendations for writing long-living CSS that&amp;rsquo;s authored by many people (e.g. CSS for a product). The whole thing is worth reading, but I especially agree with his argument against writing &lt;a href="http://en.wikipedia.org/wiki/Don&amp;#x27;t_repeat_yourself"&gt;DRY&lt;/a&gt; (Don&amp;rsquo;t Repeat Yourself) code at the expense of maintainability. He says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As a concrete example; being able to delete an entire Sass partial (say 9KB) in six months time with impunity (in that I know what will and won’t be affected by the removal) is far more valuable to me than a 1KB saving enjoyed because I re-used or extended some vague abstracted styles.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Essentially, by abstracting styles as much as possible and maximizing re-use, you&amp;rsquo;re creating an invisible web of dependencies. If you ever want to change or remove styles, you will cause a ripple effect throughout your site. Tasks that should have been 30 or 60 minutes balloon into multi-hour endeavors. As Ben says, being able to delete (or modify) with impunity is far more valuable than the small savings you get by abstracting your code.&lt;/p&gt;

&lt;p&gt;I have made this mistake many times in my career, and it took me a long time to distinguish between good and bad code reuse. The trick I use is to ask, &amp;ldquo;If I were to later change the style of this component, would I want the others that depend on it to be updated, too?&amp;rdquo; More often than not, the answer is no, and the styles should be written separately. It took some time for me to be comfortable having duplicate CSS in order to increase maintainability.&lt;/p&gt;

&lt;p&gt;Another way of thinking about this is to figure out why two components look the same. If it&amp;rsquo;s because one is a modification of a base module (e.g. a small version of a button), it&amp;rsquo;s a good candidate for code reuse. If not (e.g. a tab that looks similar to a button, but behaves differently), then you&amp;rsquo;re just setting yourself up for a maintainability nightmare.&lt;/p&gt;

&lt;p&gt;As beneficial as DRY code is, it isn&amp;rsquo;t the One True Principle of CSS. At best, it saves some time and bytes, but at worst, it&amp;rsquo;s a hindrance to CSS maintainability.&lt;/p&gt;
</content>
  </entry>
</feed>
